/*
 * ultrasonic.c
 *
 *  Created on: Jan 20, 2025
 *      Author: ch.lee
 */
#include "ultrasonic.h"

uint16_t IC_VAL1;//tim3의 상승 엣지 검출 시간
uint16_t IC_VAL2;//tim3의 하강 엣지 검출 시간
uint16_t difference;// IC_VAL2-IC_VL1
uint8_t distance;
bool isFirstCapture;

extern TIM_HandleTypeDef *inHtim


//tim3의 interrupt callback
void ultrasonic(TIM_HandleTypeDef *htim){
	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1){
		if(isFirstCapture == true){
			//IC_VAL1에 상승 엣지 시간 저장
			IC_VAL1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
			//하강 엣지 검출 설정
			isFirstCapture = false;
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
		}
		else{
			//IC_VAL2에 하강 엣지 시간 저장
			IC_VAL2  = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
			if(IC_VAL2>IC_VAL1){
				difference = IC_VAL2 - IC_VAL1;
			}
			else{
				difference = (65535 - IC_VAL1) + IC_VAL2;
			}
			//거리 계
			distance = (uint8_t)((float)difference * 0.034 /2);//s = t x 0.034/2
			//다음 Capture를 위한 설정
			isFirstCapture = true;
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
			//interrupt종료
			_HAL_TIM_DISABLE(htim, TIM_IT_CC1);
		}

	}

};

void initUltrasonic(TIM_HandleTypeDef *inHtim){
	myHtim=inHtim;
	HAL_TIM_IC_Start_IT(inHtim, TIM_CHANNEL_1);

}


uint8_t getDistance(){
	//10us 펄스 발생
	HAL_GPIO_WritePin(TRIGGER_GPIO_Port, Trigger_Pin_Pin, 1);
	delay_us(10);
	HAL_GPIO_WritePin(TRIGGER_GPIO_Port, Trigger_Pin_Pin, 0);
	_HAL_TIM_ENABLE(htim, TIM_IT_CC1);




};


